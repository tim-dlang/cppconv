{
    "include": ["../common/output-config.json", "doccomments.json"],
    "configModule": "qt.config",
    "helperModule": "qt.helpers",
    "builtinCppTypes": true,
    "includeDeclFilenamePatterns": ["qt[0-9]*/orig/.*"],
    "arrayLikeTypes": [
        "QString",
        "QStringList",
        "QList",
        "QVector",
        "QByteArray"
    ],
    "abstractClasses": [
        "QAbstractListModel",
        "QAbstractTableModel"
    ],
    "classSuffixCode": [
        {"match": {"filename": "qt[0-9]*/orig/qt.*", "isTemplate": false}, "code": "mixin(CREATE_CONVENIENCE_WRAPPERS);"},
        {"match": ".*Data", "code": ""},
        {"match": ".*Private", "code": ""}
    ],
    "defaultMangling": [
        {"module": ".*", "mangling": "C"},
        {"module": "qt.*", "mangling": "C++"},
    ],
    "modulePatterns": [
        {"match": {"filename": "qt[0-9]*/(.*/)?(?P<M>[^/]*)\\.[^./]*"}, "moduleName": "unused.\\L%M"},
        {"match": {"filename": "qt[0-9]*/orig/qt.*/Qt(?P<P>.*)/q(?P<M>.*).h"}, "moduleName": "qt.\\L%P.%M"},

        {"match": {"filename": "qt[0-9]*/orig/qtbase/QtCore/qchar.h"}, "moduleName": "qt.core.qchar"},
        {"match": {"filename": "qt[0-9]*/orig/qtbase/QtCore/qtmetamacros.h"}, "moduleName": "qt.core.metamacros"},

        {"match": {"name": "QByteArrayData"}, "moduleName": "qt.core.bytearray"},
        {"match": {"name": "QByteArrayList"}, "moduleName": "qt.core.bytearraylist"},
        {"match": {"name": "QIntegerForSize"}, "moduleName": "qt.core.global"},
        {"match": {"name": "QValidator"}, "moduleName": "qt.gui.validator"},
        {"match": {"name": "QGlyphRun"}, "moduleName": "qt.gui.glyphrun"},
        {"match": {"name": "QPicture"}, "moduleName": "qt.gui.picture"},
        {"match": {"name": "QVector2D"}, "moduleName": "qt.gui.vector2d"},
        {"match": {"name": "QVector3D"}, "moduleName": "qt.gui.vector3d"},
        {"match": {"name": "QVector4D"}, "moduleName": "qt.gui.vector4d"},
        {"match": {"name": "QDataStream"}, "moduleName": "qt.core.datastream"},
        {"match": {"name": ["QInputMethodEvent", "QContextMenuEvent", "QInputMethodQueryEvent"]}, "moduleName": "qt.gui.event"},
        {"match": {"name": "QWidgetItemData"}, "moduleName": "qt.widgets.widgetitemdata"},
        {"match": {"name": "QTextDocumentPrivate"}, "moduleName": "qt.gui.textdocument"},
        {"match": {"name": "QWidgetList"}, "moduleName": "qt.widgets.widget"},
        {"match": {"name": "QVector"}, "moduleName": "qt.core.vector"},
        {"match": {"name": "QStringList"}, "moduleName": "qt.core.stringlist"},
        {"match": {"name": ["MSG", "tagMSG"]}, "moduleName": "qt.core.coreapplication"},
        {"match": {"name": "QTranslator"}, "moduleName": "qt.core.translator"},
        {"match": {"name": ["Q_ASSERT", "Q_ASSERT_X", "Q_STATIC_ASSERT", "Q_STATIC_ASSERT_X"]}, "moduleName": "qt.core.global"},

        {"match": {"name": "ulong"}, "moduleName": "core.stdc.config"},
    ],
    "typeKinds": [
        {"match": "QInputMethodEvent", "kind": "class"},
        {"match": "QAction", "kind": "class"},
        {"match": "QActionEvent", "kind": "class"},
        {"match": "QContextMenuEvent", "kind": "class"},
        {"match": "QTranslator", "kind": "class"},

        {"match": "QImage", "kind": "struct"},
        {"match": "QPixmap", "kind": "struct"},
        {"match": "QTextStream", "kind": "struct"},
        {"match": "QPicture", "kind": "struct"},
        {"match": "ResultStoreBase", "kind": "struct"},
    ],
    "blacklist": [
        "ApplyReturnValue",
        "AreArgumentsCompatible",
        "arrow_operator_result",
        "AssociativeIteratorHasFirstAndSecond",
        "AssociativeIteratorHasKeyAndValue",
        "AssociativeValueTypeIsMetaType",
        "bindingFunctionVTable",
        "BoolList",
        "call",
        "CanUseInternalSpace",
        "__CFArray",
        "CFArrayRef",
        "__CFBoolean",
        "CFBooleanRef",
        "__CFBundle",
        "CFBundleRef",
        "__CFData",
        "CFDataRef",
        "__CFDate",
        "CFDateRef",
        "__CFDictionary",
        "CFDictionaryRef",
        "__CFError",
        "CFErrorRef",
        "__CFLocale",
        "CFLocaleRef",
        "__CFNumber",
        "CFNumberRef",
        "__CFString",
        "CFStringRef",
        "__CFTimeZone",
        "CFTimeZoneRef",
        "__CFURL",
        "CFURLRef",
        "__CFUUID",
        "CFUUIDRef",
        "CGColor",
        "CGColorRef",
        "CGColorSpace",
        "CGColorSpaceRef",
        "CGFont",
        "CGFontRef",
        "CGImage",
        "CGImageRef",
        "CGPath",
        "CGPathRef",
        "CGPoint",
        "CGRect",
        "CGSize",
        "CheckCompatibleArguments",
        "ComputeFunctorArgumentCount",
        "ComputeFunctorArgumentCountHelper",
        "ConcatSeq",
        "ConcatSeqImpl",
        "connect",
        "constKeyValueBegin",
        "constKeyValueEnd",
        "const_reference",
        "const_reverse_iterator",
        "copy",
        "crbegin",
        "create",
        "createFor",
        "crend",
        "currentThreadId",
        "debugStream",
        "deref_for_methodcall",
        "d_func",
        "disconnect",
        "equal_range",
        "ExternalRefCount",
        "ExternalRefCountWithContiguousData",
        "ExternalRefCountWithCustomDeleter",
        "ExtractClassFromFunctionPointer",
        "find",
        "findChild",
        "findChildren",
        "fromCFData",
        "fromCFDate",
        "fromCFString",
        "fromCFTimeZone",
        "fromCFURL",
        "fromCFUUID",
        "fromCGPoint",
        "fromCGRect",
        "fromCGSize",
        "fromNSData",
        "fromNSDate",
        "fromNSString",
        "fromNSTimeZone",
        "fromNSURL",
        "fromNSUUID",
        "fromRawCFData",
        "fromRawNSData",
        "fromSignal",
        "fromStdString",
        "fromStdU16String",
        "fromStdU32String",
        "fromStdWString",
        "fromType",
        "FunctionPointer",
        "Functor",
        "FunctorCall",
        "FunctorReturnType",
        "GenSeq",
        "hash",
        "hasRegisteredConverterFunction",
        "IfAssociativeIteratorHasFirstAndSecond",
        "IfAssociativeIteratorHasKeyAndValue",
        "if_compatible_char",
        "if_compatible_container",
        "if_compatible_pointer",
        "if_compatible_qbytearray_like",
        "if_compatible_qstring_like",
        "IfIsForwardIterator",
        "IfIsInputIterator",
        "IfIsNotForwardIterator",
        "if_same_type",
        "Indexes",
        "IndexesList",
        "InvokeGenSeq",
        "IsAssociativeContainer",
        "isBuiltinType",
        "IsCompatibleCharType",
        "IsCompatibleCharTypeHelper",
        "isCompatibleHelper",
        "IsCompatiblePointer",
        "IsCompatiblePointerHelper",
        "isCompatibleWith",
        "is_convertible_to_view_or_qstring_helper",
        "IsMetaTypePair",
        "IsPair",
        "IsQmlListType",
        "IsSequentialContainer",
        "is_std_pair",
        "IsUnsignedEnum",
        "keyBegin",
        "keyEnd",
        "keyValueBegin",
        "keyValueEnd",
        "lengthHelperPointer",
        "List",
        "List_Append",
        "List_Left",
        "List_Select",
        "makeIndexSequence",
        "MetaObjectForType",
        "MetaTypePairHelper",
        "MetaTypeSmartPointerHelper",
        "nativeInterface",
        "NSData",
        "NSDate",
        "NSizeHints",
        "NSMenu",
        "NSObject",
        "NSString",
        "NSTimeZone",
        "NSURL",
        "NSUUID",
        "nulTerminated",
        "__ORDER_LITTLE_ENDIAN__",
        "QAssociativeIterableConvertFunctor",
        "QAtomicAdditiveType",
        "QAtomicOps",
        "QAtomicOpsSupport",
        "QBasicAtomicPointer",
        "QBasicMutex",
        "QByteArrayListIterator",
        "Q_BYTE_ORDER",
        "QCborArray",
        "QCborContainerPrivate",
        "QCborError",
        "QCborKnownTags",
        "QCborMap",
        "QCborNegativeInteger",
        "QCborParserError",
        "QCborSimpleType",
        "QCborStreamReader",
        "QCborStreamWriter",
        "QCborTag",
        "QCborValue",
        "QCborValueRef",
        "QConcatenable",
        "qConstOverload",
        "QConstOverload",
        "QContiguousCache",
        "QDataStreamIfHasIStreamOperators",
        "QDataStreamIfHasIStreamOperatorsContainer",
        "QDataStreamIfHasOStreamOperators",
        "QDataStreamIfHasOStreamOperatorsContainer",
        "qDebug",
        "QDebug",
        "QFactoryInterface",
        "QForeachContainer",
        "QFunctorSlotObject",
        "QFunctorSlotObjectWithNoArgs",
        "QFunctorSlotObjectWithNoArgsImplicitReturn",
        "QGlobalStatic",
        "qHash",
        "qHypot",
        "QHypotHelper",
        "QHypotType",
        "QJsonArray",
        "QJsonDocument",
        "QJsonObject",
        "QJsonValue",
        "QJsonValueRef",
        "QListIterator",
        "Q_LITTLE_ENDIAN",
        "QMessageLogger",
        "QMetaTypeTypeFlags",
        "QMultiMap",
        "QMutableByteArrayListIterator",
        "QMutableListIterator",
        "QMutableStringListIterator",
        "QMutableVectorIterator",
        "QMutex",
        "QMutexLocker",
        "qNonConstOverload",
        "QNonConstOverload",
        "qobject_cast",
        "QObjectCompatProperty",
        "qobject_interface_iid",
        "qOverload",
        "QOverload",
        "QPairVariantInterfaceConvertFunctor",
        "QPairVariantInterfaceImpl",
        "qPointerFromVariant",
        "QRecursiveMutex",
        "qregisterint",
        "qRegisterNormalizedMetaType",
        "qregisteruint",
        "QScopedPointerArrayDeleter",
        "QScopedPointerPodDeleter",
        "QSequentialIterableConvertFunctor",
        "QSet",
        "qSetFieldWidth",
        "qSetPadChar",
        "qSetRealNumberPrecision",
        "qSharedPointerObjectCast",
        "QSignalBlocker",
        "QSlotObject",
        "QSlotObjectWithNoArgs",
        "QStaticSlotObject",
        "QStringBuilder",
        "QStringListIterator",
        "qt_builtin_clz",
        "qt_builtin_clzll",
        "qt_builtin_clzs",
        "qt_builtin_ctz",
        "qt_builtin_ctzll",
        "qt_builtin_ctzs",
        "qt_builtin_popcount",
        "qt_builtin_popcountll",
        "qt_check_for_QGADGET_macro",
        "QTextStream",
        "QTextStreamManipulator",
        "QTextStreamPrivate",
        "qt_getEnumMetaObject",
        "qt_getEnumName",
        "qt_incomplete_metaTypeArray",
        "qt_metaTypeArray",
        "qt_qFindChild_helper",
        "qt_qFindChildren_helper",
        "qt_QMetaEnum_debugOperator",
        "qt_QMetaEnum_flagDebugOperator",
        "qt_QMetaEnum_flagDebugOperator_helper",
        "qTryMetaTypeInterfaceForType",
        "QTSMFC",
        "QTSMFI",
        "qt_version_tag",
        "QTypeInfo",
        "QVariantHash",
        "QVariantMap",
        "QVarLengthArray",
        "QVectorIterator",
        "QWidgetMapper",
        "QWidgetSet",
        "rbegin",
        "readArrayBasedContainer",
        "readAssociativeContainer",
        "readListBasedContainer",
        "reference",
        "registerConverter",
        "registerNormalizedTypedef",
        "RemoveConstRef",
        "RemovePointer",
        "RemoveRef",
        "rend",
        "replace_helper",
        "resolveInterface",
        "reverse_iterator",
        "rvalue_ref",
        "SequentialValueTypeIsMetaType",
        "setFlag",
        "sharedPointerFromVariant_internal",
        "SharedPointerMetaTypeIdHelper",
        "StreamStateSaver",
        "swap",
        "toCFData",
        "toCFDate",
        "toCFString",
        "toCFTimeZone",
        "toCFURL",
        "toCFUUID",
        "toCGImage",
        "toCGPoint",
        "toCGRect",
        "toCGSize",
        "toJsonArray",
        "toJsonDocument",
        "toJsonObject",
        "toJsonValue",
        "toNSData",
        "toNSDate",
        "toNSMenu",
        "toNSString",
        "toNSTimeZone",
        "toNSURL",
        "toNSUUID",
        "toRawCFData",
        "toRawNSData",
        "toStdString",
        "toStdU16String",
        "toStdU32String",
        "toStdWString",
        "typenameHelper",
        "vsprintf",
        "weakPointerFromVariant_internal",
        "writeAssociativeContainer",
        "writeSequentialContainer",

        {"name": "addAction", "isTemplate": true},
        {"name": "invokeMethod", "isTemplate": true},
        {"name": "link", "isTemplate": true},
        {"name": "singleShot", "isTemplate": true},
        {"filename": "gcc-rt/orig/include-cxx/.*"}
    ],
    "versionReplacements": {
        "Q_CLANG_QDOC": "Q_CLANG_QDOC",
        "QT_ASCII_CAST_WARNINGS": "QT_ASCII_CAST_WARNINGS",
        "QT_BASIC_ATOMIC_HAS_CONSTRUCTORS": "QT_BASIC_ATOMIC_HAS_CONSTRUCTORS",
        "QT_BUILD_QMAKE": "QT_BUILD_QMAKE",
        "QT_COMPILING_QIMAGE_COMPAT_CPP": "QT_COMPILING_QIMAGE_COMPAT_CPP",
        "QT_COMPILING_QSTRING_COMPAT_CPP": "QT_COMPILING_QSTRING_COMPAT_CPP",
        "QT_DEBUG": "QT_DEBUG",
        "QT_KEYPAD_NAVIGATION": "QT_KEYPAD_NAVIGATION",
        "QT_NO_ACCESSIBILITY": "QT_NO_ACCESSIBILITY",
        "QT_NO_ACTION": "QT_NO_ACTION",
        "QT_NO_CAST_FROM_ASCII": "QT_NO_CAST_FROM_ASCII",
        "QT_NO_CAST_FROM_BYTEARRAY": "QT_NO_CAST_FROM_BYTEARRAY",
        "QT_NO_CAST_TO_ASCII": "QT_NO_CAST_TO_ASCII",
        "QT_NO_CLIPBOARD": "QT_NO_CLIPBOARD",
        "QT_NO_CONTEXTMENU": "QT_NO_CONTEXTMENU",
        "QT_NO_CURSOR": "QT_NO_CURSOR",
        "QT_NO_DATA_RELOCATION": "QT_NO_DATA_RELOCATION",
        "QT_NO_DATASTREAM": "QT_NO_DATASTREAM",
        "QT_NO_DEBUG": "QT_NO_DEBUG",
        "QT_NO_DEBUG_STREAM": "QT_NO_DEBUG_STREAM",
        "QT_NO_GEOM_VARIANT": "QT_NO_GEOM_VARIANT",
        "QT_NO_GESTURES": "QT_NO_GESTURES",
        "QT_NO_IMAGEFORMAT_XPM": "QT_NO_IMAGEFORMAT_XPM",
        "QT_NO_IMAGE_HEURISTIC_MASK": "QT_NO_IMAGE_HEURISTIC_MASK",
        "QT_NO_PICTURE": "QT_NO_PICTURE",
        "QT_NO_PROPERTIES": "QT_NO_PROPERTIES",
        "QT_NO_RAWFONT": "QT_NO_RAWFONT",
        "QT_NO_REGEXP": "QT_NO_REGEXP",
        "QT_NO_REGEXP_CAPTURE": "QT_NO_REGEXP_CAPTURE",
        "QT_NO_REGULAREXPRESSION": "QT_NO_REGULAREXPRESSION",
        "QT_NO_SESSIONMANAGER": "QT_NO_SESSIONMANAGER",
        "QT_NO_SHORTCUT": "QT_NO_SHORTCUT",
        "QT_NO_STYLE_STYLESHEET": "QT_NO_STYLE_STYLESHEET",
        "QT_NO_TOOLTIP": "QT_NO_TOOLTIP",
        "QT_NO_TRANSLATION": "QT_NO_TRANSLATION",
        "QT_NO_UNSHARABLE_CONTAINERS": "QT_NO_UNSHARABLE_CONTAINERS",
        "QT_NO_USERDATA": "QT_NO_USERDATA",
        "QT_QHASH_DEBUG": "QT_QHASH_DEBUG",
        "QT_RESTRICTED_CAST_FROM_ASCII": "QT_RESTRICTED_CAST_FROM_ASCII",
        "QT_STRICT_ITERATORS": "QT_STRICT_ITERATORS",
        //"QT_STRINGVIEW_LEVEL": "QT_STRINGVIEW_LEVEL", // can't be version, because it is used as number
        "QT_USE_FAST_OPERATOR_PLUS": "QT_USE_FAST_OPERATOR_PLUS",
        "QT_USE_QSTRINGBUILDER": "QT_USE_QSTRINGBUILDER",
        "QT_BUILD_GUI_LIB": "QT_BUILD_GUI_LIB",
        "QT_DEPRECATED_WARNINGS_SINCE": "QT_DEPRECATED_WARNINGS_SINCE",
        "QT_HAS_BUILTIN_CLZ": "QT_HAS_BUILTIN_CLZ",
        "QT_HAS_BUILTIN_CLZLL": "QT_HAS_BUILTIN_CLZLL",
        "QT_HAS_BUILTIN_CLZS": "QT_HAS_BUILTIN_CLZS",
        "QT_HAS_BUILTIN_CTZ": "QT_HAS_BUILTIN_CTZ",
        "QT_HAS_BUILTIN_CTZLL": "QT_HAS_BUILTIN_CTZLL",
        "QT_HAS_BUILTIN_CTZS": "QT_HAS_BUILTIN_CTZS",
        "QT_HAS_CONSTEXPR_BUILTINS": "QT_HAS_CONSTEXPR_BUILTINS",
        "QT_MAKE_CHECKED_ARRAY_ITERATOR": "QT_MAKE_CHECKED_ARRAY_ITERATOR",
        "QT_MOC": "QT_MOC",
        "QT_NO_COMPRESS": "QT_NO_COMPRESS",
        "QT_NO_CSSPARSER": "QT_NO_CSSPARSER",
        "QT_NO_DEPRECATED_WARNINGS": "QT_NO_DEPRECATED_WARNINGS",
        "QT_NO_FOREACH": "QT_NO_FOREACH",
        "QT_NO_GRAPHICSVIEW": "QT_NO_GRAPHICSVIEW",
        "QT_NO_INPUTMETHOD": "QT_NO_INPUTMETHOD",
        "QT_NO_INTEGER_EVENT_COORDINATES": "QT_NO_INTEGER_EVENT_COORDINATES",
        "QT_NO_LINKED_LIST": "QT_NO_LINKED_LIST",
        "QT_NO_NARROWING_CONVERSIONS_IN_CONNECT": "QT_NO_NARROWING_CONVERSIONS_IN_CONNECT",
        "QT_NO_PRINTER": "QT_NO_PRINTER",
        "QT_NO_STATUSTIP": "QT_NO_STATUSTIP",
        "QT_NO_SYSTEMLOCALE": "QT_NO_SYSTEMLOCALE",
        "QT_NO_TEXTHTMLPARSER": "QT_NO_TEXTHTMLPARSER",
        "QT_NO_TOOLBAR": "QT_NO_TOOLBAR",
        "QT_NO_URL_CAST_FROM_STRING": "QT_NO_URL_CAST_FROM_STRING",
        "QT_NO_VALIDATOR": "QT_NO_VALIDATOR",
        "QT_NO_VECTOR2D": "QT_NO_VECTOR2D",
        "QT_NO_VECTOR3D": "QT_NO_VECTOR3D",
        "QT_NO_VECTOR4D": "QT_NO_VECTOR4D",
        "QT_NO_VERSION_TAGGING": "QT_NO_VERSION_TAGGING",
        "QT_NO_WARNING_OUTPUT": "QT_NO_WARNING_OUTPUT",
        "QT_VERSION_TAG": "QT_VERSION_TAG",
        "QT_NO_SSL": "QT_NO_SSL",
        "QT_NO_NETWORKPROXY": "QT_NO_NETWORKPROXY",
        "QT_NO_BEARERMANAGEMENT": "QT_NO_BEARERMANAGEMENT"
    },
    "fileHeaderReplacement": [
        {
            "module": "qt.*",
            "expectedLines": [
                "/****************************************************************************",
                "**",
                {"regex": "(\\*\\* Copyright \\(C\\)[^\n]*\n)+"},
                {"regex": "\\*\\* Contact: [^\n]*\n"},
                "**",
                {"regex": "\\*\\* This file is part of[^\n]*\n"},
                "**",
                "** $QT_BEGIN_LICENSE:LGPL$",
                "** Commercial License Usage",
                "** Licensees holding valid commercial Qt licenses may use this file in",
                "** accordance with the commercial license agreement provided with the",
                "** Software or, alternatively, in accordance with the terms contained in",
                "** a written agreement between you and The Qt Company. For licensing terms",
                "** and conditions see https://www.qt.io/terms-conditions. For further",
                "** information use the contact form at https://www.qt.io/contact-us.",
                "**",
                "** GNU Lesser General Public License Usage",
                "** Alternatively, this file may be used under the terms of the GNU Lesser",
                "** General Public License version 3 as published by the Free Software",
                "** Foundation and appearing in the file LICENSE.LGPL3 included in the",
                "** packaging of this file. Please review the following information to",
                "** ensure the GNU Lesser General Public License version 3 requirements",
                "** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.",
                "**",
                "** GNU General Public License Usage",
                "** Alternatively, this file may be used under the terms of the GNU",
                "** General Public License version 2.0 or (at your option) the GNU General",
                "** Public license version 3 or any later version approved by the KDE Free",
                "** Qt Foundation. The licenses are as published by the Free Software",
                "** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3",
                "** included in the packaging of this file. Please review the following",
                "** information to ensure the GNU General Public License requirements will",
                "** be met: https://www.gnu.org/licenses/gpl-2.0.html and",
                "** https://www.gnu.org/licenses/gpl-3.0.html.",
                "**",
                "** $QT_END_LICENSE$",
                "**",
                "****************************************************************************/",
            ],
            "lines": [
                "/*",
                " * DQt - D bindings for the Qt Toolkit",
                " *",
                " * GNU Lesser General Public License Usage",
                " * This file may be used under the terms of the GNU Lesser",
                " * General Public License version 3 as published by the Free Software",
                " * Foundation and appearing in the file LICENSE.LGPL3 included in the",
                " * packaging of this file. Please review the following information to",
                " * ensure the GNU Lesser General Public License version 3 requirements",
                " * will be met: https://www.gnu.org/licenses/lgpl-3.0.html.",
                " */",
            ]
        }
    ]
}

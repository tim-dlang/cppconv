{
    "include": ["../common/output-config.json", "doccomments.json"],
    "configModule": "qt.config",
    "helperModule": "qt.helpers",
    "importedSymbol": "dqtimported",
    "builtinCppTypes": true,
    "includeDeclFilenamePatterns": ["qt[0-9]*/orig/.*"],
    "arrayLikeTypes": [
        "QString",
        "QStringList",
        "QList",
        "QVector",
        "QByteArray"
    ],
    "abstractClasses": [
        "QAbstractListModel",
        "QAbstractTableModel"
    ],
    "classSuffixCode": [
        {"match": {"filename": "qt[0-9]*/orig/qt.*", "isTemplate": false}, "code": "mixin(CREATE_CONVENIENCE_WRAPPERS);"},
        {"match": ".*Data", "code": ""},
        {"match": ".*Private", "code": ""}
    ],
    "defaultMangling": [
        {"module": ".*", "mangling": "C"},
        {"module": "qt.*", "mangling": "C++"},
    ],
    "modulePatterns": [
        {"match": {"filename": "qt[0-9]*/(.*/)?(?P<M>[^/]*)\\.[^./]*"}, "moduleName": "unused.\\L%M"},
        {"match": {"filename": "qt[0-9]*/orig/qt.*/Qt(?P<P>.*)/q(?P<M>.*).h"}, "moduleName": "qt.\\L%P.%M"},
        {"match": {"filename": "qt[0-9]*/orig/qtwebengine/Qt(?P<P>.*)/qt?webengine(?P<M>.*).h"}, "moduleName": "qt.webengine.\\L%M", "extraPrefix": "\\L%P"},
        {"match": {"filename": "qt[0-9]*/orig/qt.*/Qt(?P<P>Qml)/qt?qml(?P<M>..*).h"}, "moduleName": "qt.\\L%P.\\L%M"},
        {"match": {"filename": "qt[0-9]*/orig/qt.*/Qt(?P<P>Quick.*)/qt?quick(?P<M>.*).h"}, "moduleName": "qt.\\L%P.\\L%M"},

        {"match": {"filename": "qt[0-9]*/orig/qtbase/QtCore/qchar.h"}, "moduleName": "qt.core.qchar"},
        {"match": {"filename": "qt[0-9]*/orig/qtbase/QtCore/qtmetamacros.h"}, "moduleName": "qt.core.metamacros"},

        {"match": {"name": "QByteArrayData"}, "moduleName": "qt.core.bytearray"},
        {"match": {"name": "QByteArrayList"}, "moduleName": "qt.core.bytearraylist"},
        {"match": {"name": "QIntegerForSize"}, "moduleName": "qt.core.global"},
        {"match": {"name": "QValidator"}, "moduleName": "qt.gui.validator"},
        {"match": {"name": "QGlyphRun"}, "moduleName": "qt.gui.glyphrun"},
        {"match": {"name": "QPicture"}, "moduleName": "qt.gui.picture"},
        {"match": {"name": "QVector2D"}, "moduleName": "qt.gui.vector2d"},
        {"match": {"name": "QVector3D"}, "moduleName": "qt.gui.vector3d"},
        {"match": {"name": "QVector4D"}, "moduleName": "qt.gui.vector4d"},
        {"match": {"name": "QDataStream"}, "moduleName": "qt.core.datastream"},
        {"match": {"name": ["QInputMethodEvent", "QContextMenuEvent", "QInputMethodQueryEvent"]}, "moduleName": "qt.gui.event"},
        {"match": {"name": "QWidgetItemData"}, "moduleName": "qt.widgets.widgetitemdata"},
        {"match": {"name": "QTextDocumentPrivate"}, "moduleName": "qt.gui.textdocument"},
        {"match": {"name": "QWidgetList"}, "moduleName": "qt.widgets.widget"},
        {"match": {"name": "QVector"}, "moduleName": "qt.core.vector"},
        {"match": {"name": "QStringList"}, "moduleName": "qt.core.stringlist"},
        {"match": {"name": ["MSG", "tagMSG"]}, "moduleName": "qt.core.coreapplication"},
        {"match": {"name": "QTranslator"}, "moduleName": "qt.core.translator"},
        {"match": {"name": ["Q_ASSERT", "Q_ASSERT_X", "Q_STATIC_ASSERT", "Q_STATIC_ASSERT_X"]}, "moduleName": "qt.core.global"},

        {"match": {"name": "ulong"}, "moduleName": "core.stdc.config"},
    ],
    "typeKinds": [
        {"match": "QInputMethodEvent", "kind": "class"},
        {"match": "QAction", "kind": "class"},
        {"match": "QActionEvent", "kind": "class"},
        {"match": "QContextMenuEvent", "kind": "class"},
        {"match": "QTranslator", "kind": "class"},

        {"match": "QImage", "kind": "struct"},
        {"match": "QPixmap", "kind": "struct"},
        {"match": "QBitmap", "kind": "struct"},
        {"match": "QTextStream", "kind": "struct"},
        {"match": "QPicture", "kind": "struct"},
        {"match": "QtPrivate::ResultStoreBase", "kind": "struct"},
    ],
    "blacklist": [
        ".*::arrow_operator_result",
        ".*::call",
        "__CFArray",
        "CFArrayRef",
        "__CFBoolean",
        "CFBooleanRef",
        "__CFBundle",
        "CFBundleRef",
        "__CFData",
        "CFDataRef",
        "__CFDate",
        "CFDateRef",
        "__CFDictionary",
        "CFDictionaryRef",
        "__CFError",
        "CFErrorRef",
        "__CFLocale",
        "CFLocaleRef",
        "__CFNumber",
        "CFNumberRef",
        "__CFString",
        "CFStringRef",
        "__CFTimeZone",
        "CFTimeZoneRef",
        "__CFURL",
        "CFURLRef",
        "__CFUUID",
        "CFUUIDRef",
        "CGColor",
        "CGColorRef",
        "CGColorSpace",
        "CGColorSpaceRef",
        "CGFont",
        "CGFontRef",
        "CGImage",
        "CGImageRef",
        "CGPath",
        "CGPathRef",
        "CGPoint",
        "CGRect",
        "CGSize",
        ".*::constKeyValueBegin",
        ".*::constKeyValueEnd",
        ".*::const_reference",
        ".*::const_reverse_iterator",
        ".*::copy",
        ".*::crbegin",
        ".*::create",
        ".*::crend",
        ".*::debugStream",
        ".*::d_func",
        ".*equal_range",
        ".*::find",
        ".*::findChild",
        ".*::findChildren",
        ".*::fromCFData",
        ".*::fromCFDate",
        ".*::fromCFString",
        ".*::fromCFTimeZone",
        ".*::fromCFURL",
        ".*::fromCFUUID",
        ".*::fromCGPoint",
        ".*::fromCGRect",
        ".*::fromCGSize",
        ".*::fromNSData",
        ".*::fromNSDate",
        ".*::fromNSString",
        ".*::fromNSTimeZone",
        ".*::fromNSURL",
        ".*::fromNSUUID",
        ".*::fromRawCFData",
        ".*::fromRawNSData",
        ".*::fromSignal",
        ".*::fromStdString",
        ".*::fromStdU16String",
        ".*::fromStdU32String",
        ".*::fromStdWString",
        ".*::fromType",
        ".*::if_compatible_char",
        ".*::if_compatible_container",
        ".*::if_compatible_pointer",
        ".*::if_compatible_qbytearray_like",
        ".*::if_compatible_qstring_like",
        ".*::if_compatible_string",
        ".*::iterator_category",
        ".*::keyBegin",
        ".*::keyEnd",
        ".*::keyValueBegin",
        ".*::keyValueEnd",
        ".*::lengthHelperPointer",
        ".*::nativeInterface",
        "NSData",
        "NSDate",
        "NSMenu",
        "NSObject",
        "NSString",
        "NSTimeZone",
        "NSURL",
        "NSUUID",
        "__ORDER_LITTLE_ENDIAN__",
        "QAction::associatedWidgets",
        "QAction::associatedGraphicsWidgets",
        "QAlgorithmsPrivate::qt_builtin_clz",
        "QAlgorithmsPrivate::qt_builtin_clzll",
        "QAlgorithmsPrivate::qt_builtin_clzs",
        "QAlgorithmsPrivate::qt_builtin_ctz",
        "QAlgorithmsPrivate::qt_builtin_ctzll",
        "QAlgorithmsPrivate::qt_builtin_ctzs",
        "QAlgorithmsPrivate::qt_builtin_popcount",
        "QAlgorithmsPrivate::qt_builtin_popcountll",
        ".*::QAssociativeIterableConvertFunctor",
        "QAtomicAdditiveType",
        "QAtomicOps",
        "QAtomicOpsSupport",
        "QBasicAtomicPointer",
        "QBasicMutex",
        "QByteArrayListIterator",
        "QByteArray::nulTerminated",
        "Q_BYTE_ORDER",
        "QCborArray",
        "QCborContainerPrivate",
        "QCborError",
        "QCborKnownTags",
        "QCborMap",
        "QCborNegativeInteger",
        "QCborParserError",
        "QCborSimpleType",
        "QCborStreamReader",
        "QCborStreamWriter",
        "QCborTag",
        "QCborValue",
        "QCborValueRef",
        "QConcatenable",
        "qConstOverload",
        "QConstOverload",
        "QContiguousCache",
        "QCryptographicHash::hash",
        "QDataStreamIfHasIStreamOperators",
        "QDataStreamIfHasIStreamOperatorsContainer",
        "QDataStreamIfHasOStreamOperators",
        "QDataStreamIfHasOStreamOperatorsContainer",
        "qDebug",
        "QDebug",
        "QEnableSharedFromThis",
        "QFactoryInterface",
        "QGlobalStatic",
        "qHash",
        "qHypot",
        "QJSEngine::handle",
        "QJsonArray",
        "QJsonDocument",
        "QJsonObject",
        "QJsonValue",
        "QJsonValueRef",
        "QListIterator",
        "Q_LITTLE_ENDIAN",
        "QMessageLogger",
        "QMetaObject::connect",
        "QMetaObject::disconnect",
        "QMetaType::hasRegisteredConverterFunction",
        "QQmlPrivate::Constructors",
        "QQmlPrivate::ExtendedType",
        "QQmlPrivate::ValueType",
        "qmlRegisterSingletonType",
        "qmlRegisterTypesAndRevisions",
        "QmlTypeAndRevisionsRegistration",
        "QMultiMap",
        "QMutableByteArrayListIterator",
        "QMutableListIterator",
        "QMutableStringListIterator",
        "QMutableVectorIterator",
        "QMutex",
        "QMutexLocker",
        "qNonConstOverload",
        "QNonConstOverload",
        "qobject_cast",
        "QObjectCompatProperty",
        "QObject::connect",
        "QObject::disconnect",
        "qobject_interface_iid",
        "qOverload",
        "QOverload",
        "qmlRegisterNamespaceAndRevisions",
        "qPointerFromVariant",
        "QQmlEngine::networkAccessManager",
        "QQmlEngine::networkAccessManagerFactory",
        "QQmlEngine::setNetworkAccessManagerFactory",
        "QQmlError::messageType",
        "QQmlError::setMessageType",
        "QQmlNetworkAccessManagerFactory",
        "QQuickItem::transform",
        "QRecursiveMutex",
        "qregisterint",
        "qRegisterNormalizedMetaType.*",
        "qregisteruint",
        "QScopedArrayPointer::if_same_type",
        "QScopedPointerArrayDeleter",
        "QScopedPointerPodDeleter",
        ".*::QSequentialIterableConvertFunctor",
        "QSet",
        "qSetFieldWidth",
        "qSetPadChar",
        "qSetRealNumberPrecision",
        "qSharedPointerFromVariant",
        "QSharedPointer::IfCompatible",
        "qSharedPointerObjectCast",
        "QSignalBlocker",
        "QStringBuilder",
        "QString::is_convertible_to_view_or_qstring_helper",
        "QStringListIterator",
        "QString::replace_helper",
        "QString::vsprintf",
        ".*::qt_check_for_QGADGET_macro",
        "QTextStream",
        "QTextStreamManipulator",
        "QTextStreamPrivate",
        ".*::qt_getEnumMetaObject",
        ".*::qt_getEnumName",
        "QThread::currentThreadId",
        "qt_incomplete_metaTypeArray",
        "qt_metaTypeArray",
        "QtFuture::.*whenAll",
        "QtFuture::.*whenAny",
        "QtMetaTypePrivate::QPairVariantInterfaceConvertFunctor",
        "QtMetaTypePrivate::QPairVariantInterfaceImpl",
        "Qt::NSizeHints",
        "QtPrivate::ApplyReturnValue",
        "QtPrivate::AreArgumentsCompatible",
        "QtPrivate::AssociativeIteratorHasFirstAndSecond",
        "QtPrivate::AssociativeIteratorHasKeyAndValue",
        "QtPrivate::AssociativeValueTypeIsMetaType",
        "QtPrivate::bindingFunctionVTable",
        "QtPrivate::BindingFunctionVTable::createFor",
        "QtPrivate::BoolList",
        "QtPrivate::CheckCompatibleArguments",
        "QtPrivate::ComputeFunctorArgumentCount",
        "QtPrivate::ComputeFunctorArgumentCountHelper",
        "QtPrivate::ConcatSeq",
        "QtPrivate::ConcatSeqImpl",
        "QtPrivate::deref_for_methodcall",
        "QtPrivate::detail::ExtractClassFromFunctionPointer",
        "QtPrivate::FunctionPointer",
        "QtPrivate::Functor",
        "QtPrivate::FunctorCall",
        "QtPrivate::FunctorReturnType",
        "QtPrivate::GenSeq",
        "QtPrivate::IfAssociativeIteratorHasFirstAndSecond",
        "QtPrivate::IfAssociativeIteratorHasKeyAndValue",
        "QtPrivate::IfIsForwardIterator",
        "QtPrivate::IfIsInputIterator",
        "QtPrivate::IfIsNotForwardIterator",
        "QtPrivate::Indexes",
        "QtPrivate::IndexesList",
        "QtPrivate::InvokeGenSeq",
        "QtPrivate::IsAssociativeContainer",
        "QtPrivate::isBuiltinType",
        "QtPrivate::IsCompatibleCharType",
        "QtPrivate::IsCompatibleCharTypeHelper",
        "QtPrivate::IsCompatiblePointer",
        "QtPrivate::IsCompatiblePointerHelper",
        "QtPrivate::IsMetaTypePair",
        "QtPrivate::IsPair",
        "QtPrivate::IsQmlListType",
        "QtPrivate::IsSequentialContainer",
        "QtPrivate::is_std_pair",
        "QtPrivate::IsUnsignedEnum",
        "QtPrivate::List",
        "QtPrivate::List_Append",
        "QtPrivate::List_Left",
        "QtPrivate::List_Select",
        "QtPrivate::makeIndexSequence",
        "QtPrivate::MetaObjectForType",
        "QtPrivate::MetaTypePairHelper",
        "QtPrivate::MetaTypeSmartPointerHelper",
        "QtPrivate::QForeachContainer",
        "QtPrivate::QFunctorSlotObject",
        "QtPrivate::QFunctorSlotObjectWithNoArgs",
        "QtPrivate::QFunctorSlotObjectWithNoArgsImplicitReturn",
        "QtPrivate::QHypotHelper",
        "QtPrivate::QHypotType",
        "QtPrivate::QMetaTypeTypeFlags",
        "QtPrivate::QSlotObject",
        "QtPrivate::QSlotObjectWithNoArgs",
        "QtPrivate::QStaticSlotObject",
        "QtPrivate::qTryMetaTypeInterfaceForType",
        "QtPrivate::readArrayBasedContainer",
        "QtPrivate::readAssociativeContainer",
        "QtPrivate::readListBasedContainer",
        "QtPrivate::RemoveConstRef",
        "QtPrivate::RemoveRef",
        "QtPrivate::SequentialValueTypeIsMetaType",
        "QtPrivate::SharedPointerMetaTypeIdHelper",
        "QtPrivate::StreamStateSaver",
        "QtPrivate::typenameHelper",
        "QtPrivate::writeAssociativeContainer",
        "QtPrivate::writeSequentialContainer",
        "qt_qFindChild_helper",
        "qt_qFindChildren_helper",
        "qt_QMetaEnum_debugOperator",
        "qt_QMetaEnum_flagDebugOperator",
        "qt_QMetaEnum_flagDebugOperator_helper",
        "QtSharedPointer::ExternalRefCount",
        "QtSharedPointer::ExternalRefCountWithContiguousData",
        "QtSharedPointer::ExternalRefCountWithCustomDeleter",
        "QtSharedPointer::internalSafetyCheckAdd",
        "QtSharedPointer::internalSafetyCheckRemove",
        "QtSharedPointer::RemovePointer",
        "QtSharedPointer::sharedPointerFromVariant_internal",
        "QtSharedPointer::weakPointerFromVariant_internal",
        "QTSMFC",
        "QTSMFI",
        "qt_version_tag",
        "QTypeInfo",
        "QVariantHash",
        "QVariantMap",
        "QVariant::Private::CanUseInternalSpace",
        "QVarLengthArray",
        "QVectorIterator",
        "QWeakPointer",
        "qWeakPointerFromVariant",
        "QWidgetMapper",
        "QWidgetSet",
        ".*::createWithInitialProperties",
        ".*::rbegin",
        ".*::reference",
        ".*::reference_type",
        ".*::registerConverter",
        ".*::rend",
        ".*::resolveInterface",
        ".*::reverse_iterator",
        ".*::rvalue_ref",
        ".*::setFlag",
        ".*::setInitialProperties",
        ".*::startDebugConnector",
        ".*swap",
        ".*::toCFData",
        ".*::toCFDate",
        ".*::toCFString",
        ".*::toCFTimeZone",
        ".*::toCFURL",
        ".*::toCFUUID",
        ".*::toCGImage",
        ".*::toCGPoint",
        ".*::toCGRect",
        ".*::toCGSize",
        ".*::toJsonArray",
        ".*::toJsonDocument",
        ".*::toJsonObject",
        ".*::toJsonValue",
        ".*::toNSData",
        ".*::toNSDate",
        ".*::toNSMenu",
        ".*::toNSString",
        ".*::toNSTimeZone",
        ".*::toNSURL",
        ".*::toNSUUID",
        ".*::toRawCFData",
        ".*::toRawNSData",
        ".*::toSet",
        ".*::toStdList",
        ".*::toStdString",
        ".*::toStdU16String",
        ".*::toStdU32String",
        ".*::toStdWString",
        ".*::toWeakRef",
        ".*::QmlAttachedType",
        "TypeInfo::isCompatibleHelper",
        "TypeInfo::isCompatibleWith",

        {"name": ".*::addAction", "isTemplate": true},
        {"name": "QMetaObject::invokeMethod", "isTemplate": true},
        {"name": "QMetaObject::SuperData::link", "isTemplate": true},
        {"name": "QTimer::singleShot", "isTemplate": true},
        {"filename": "gcc-rt/orig/include-cxx/.*"}
    ],
    "versionReplacements": {
        "Q_CLANG_QDOC": "Q_CLANG_QDOC",
        "QT_ASCII_CAST_WARNINGS": "QT_ASCII_CAST_WARNINGS",
        "QT_BASIC_ATOMIC_HAS_CONSTRUCTORS": "QT_BASIC_ATOMIC_HAS_CONSTRUCTORS",
        "QT_BUILD_QMAKE": "QT_BUILD_QMAKE",
        "QT_COMPILING_QIMAGE_COMPAT_CPP": "QT_COMPILING_QIMAGE_COMPAT_CPP",
        "QT_COMPILING_QSTRING_COMPAT_CPP": "QT_COMPILING_QSTRING_COMPAT_CPP",
        "QT_DEBUG": "QT_DEBUG",
        "QT_KEYPAD_NAVIGATION": "QT_KEYPAD_NAVIGATION",
        "QT_NO_ACCESSIBILITY": "QT_NO_ACCESSIBILITY",
        "QT_NO_ACTION": "QT_NO_ACTION",
        "QT_NO_CAST_FROM_ASCII": "QT_NO_CAST_FROM_ASCII",
        "QT_NO_CAST_FROM_BYTEARRAY": "QT_NO_CAST_FROM_BYTEARRAY",
        "QT_NO_CAST_TO_ASCII": "QT_NO_CAST_TO_ASCII",
        "QT_NO_CLIPBOARD": "QT_NO_CLIPBOARD",
        "QT_NO_CONTEXTMENU": "QT_NO_CONTEXTMENU",
        "QT_NO_CURSOR": "QT_NO_CURSOR",
        "QT_NO_DATA_RELOCATION": "QT_NO_DATA_RELOCATION",
        "QT_NO_DATASTREAM": "QT_NO_DATASTREAM",
        "QT_NO_DEBUG": "QT_NO_DEBUG",
        "QT_NO_DEBUG_STREAM": "QT_NO_DEBUG_STREAM",
        "QT_NO_GEOM_VARIANT": "QT_NO_GEOM_VARIANT",
        "QT_NO_GESTURES": "QT_NO_GESTURES",
        "QT_NO_IMAGEFORMAT_XPM": "QT_NO_IMAGEFORMAT_XPM",
        "QT_NO_IMAGE_HEURISTIC_MASK": "QT_NO_IMAGE_HEURISTIC_MASK",
        "QT_NO_PICTURE": "QT_NO_PICTURE",
        "QT_NO_PROPERTIES": "QT_NO_PROPERTIES",
        "QT_NO_RAWFONT": "QT_NO_RAWFONT",
        "QT_NO_REGEXP": "QT_NO_REGEXP",
        "QT_NO_REGEXP_CAPTURE": "QT_NO_REGEXP_CAPTURE",
        "QT_NO_REGULAREXPRESSION": "QT_NO_REGULAREXPRESSION",
        "QT_NO_SESSIONMANAGER": "QT_NO_SESSIONMANAGER",
        "QT_NO_SHORTCUT": "QT_NO_SHORTCUT",
        "QT_NO_STYLE_STYLESHEET": "QT_NO_STYLE_STYLESHEET",
        "QT_NO_TOOLTIP": "QT_NO_TOOLTIP",
        "QT_NO_TRANSLATION": "QT_NO_TRANSLATION",
        "QT_NO_UNSHARABLE_CONTAINERS": "QT_NO_UNSHARABLE_CONTAINERS",
        "QT_NO_USERDATA": "QT_NO_USERDATA",
        "QT_QHASH_DEBUG": "QT_QHASH_DEBUG",
        "QT_RESTRICTED_CAST_FROM_ASCII": "QT_RESTRICTED_CAST_FROM_ASCII",
        "QT_STRICT_ITERATORS": "QT_STRICT_ITERATORS",
        //"QT_STRINGVIEW_LEVEL": "QT_STRINGVIEW_LEVEL", // can't be version, because it is used as number
        "QT_USE_FAST_OPERATOR_PLUS": "QT_USE_FAST_OPERATOR_PLUS",
        "QT_USE_QSTRINGBUILDER": "QT_USE_QSTRINGBUILDER",
        "QT_BUILD_GUI_LIB": "QT_BUILD_GUI_LIB",
        "QT_DEPRECATED_WARNINGS_SINCE": "QT_DEPRECATED_WARNINGS_SINCE",
        "QT_HAS_BUILTIN_CLZ": "QT_HAS_BUILTIN_CLZ",
        "QT_HAS_BUILTIN_CLZLL": "QT_HAS_BUILTIN_CLZLL",
        "QT_HAS_BUILTIN_CLZS": "QT_HAS_BUILTIN_CLZS",
        "QT_HAS_BUILTIN_CTZ": "QT_HAS_BUILTIN_CTZ",
        "QT_HAS_BUILTIN_CTZLL": "QT_HAS_BUILTIN_CTZLL",
        "QT_HAS_BUILTIN_CTZS": "QT_HAS_BUILTIN_CTZS",
        "QT_HAS_CONSTEXPR_BUILTINS": "QT_HAS_CONSTEXPR_BUILTINS",
        "QT_MAKE_CHECKED_ARRAY_ITERATOR": "QT_MAKE_CHECKED_ARRAY_ITERATOR",
        "QT_MOC": "QT_MOC",
        "QT_NO_COMPRESS": "QT_NO_COMPRESS",
        "QT_NO_CSSPARSER": "QT_NO_CSSPARSER",
        "QT_NO_DEPRECATED_WARNINGS": "QT_NO_DEPRECATED_WARNINGS",
        "QT_NO_FOREACH": "QT_NO_FOREACH",
        "QT_NO_GRAPHICSVIEW": "QT_NO_GRAPHICSVIEW",
        "QT_NO_INPUTMETHOD": "QT_NO_INPUTMETHOD",
        "QT_NO_INTEGER_EVENT_COORDINATES": "QT_NO_INTEGER_EVENT_COORDINATES",
        "QT_NO_LINKED_LIST": "QT_NO_LINKED_LIST",
        "QT_NO_NARROWING_CONVERSIONS_IN_CONNECT": "QT_NO_NARROWING_CONVERSIONS_IN_CONNECT",
        "QT_NO_PRINTER": "QT_NO_PRINTER",
        "QT_NO_STATUSTIP": "QT_NO_STATUSTIP",
        "QT_NO_SYSTEMLOCALE": "QT_NO_SYSTEMLOCALE",
        "QT_NO_TEXTHTMLPARSER": "QT_NO_TEXTHTMLPARSER",
        "QT_NO_TOOLBAR": "QT_NO_TOOLBAR",
        "QT_NO_URL_CAST_FROM_STRING": "QT_NO_URL_CAST_FROM_STRING",
        "QT_NO_VALIDATOR": "QT_NO_VALIDATOR",
        "QT_NO_VECTOR2D": "QT_NO_VECTOR2D",
        "QT_NO_VECTOR3D": "QT_NO_VECTOR3D",
        "QT_NO_VECTOR4D": "QT_NO_VECTOR4D",
        "QT_NO_VERSION_TAGGING": "QT_NO_VERSION_TAGGING",
        "QT_NO_WARNING_OUTPUT": "QT_NO_WARNING_OUTPUT",
        "QT_VERSION_TAG": "QT_VERSION_TAG",
        "QT_NO_SSL": "QT_NO_SSL",
        "QT_NO_NETWORKPROXY": "QT_NO_NETWORKPROXY",
        "QT_NO_BEARERMANAGEMENT": "QT_NO_BEARERMANAGEMENT"
    },
    "fileHeaderReplacement": [
        {
            "module": "qt.*",
            "expectedLines": [
                "/****************************************************************************",
                "**",
                {"regex": "(\\*\\* Copyright \\(C\\)[^\n]*\n)+"},
                {"regex": "\\*\\* Contact: [^\n]*\n"},
                "**",
                {"regex": "\\*\\* This file is part of[^\n]*\n"},
                "**",
                "** $QT_BEGIN_LICENSE:LGPL$",
                "** Commercial License Usage",
                "** Licensees holding valid commercial Qt licenses may use this file in",
                "** accordance with the commercial license agreement provided with the",
                "** Software or, alternatively, in accordance with the terms contained in",
                "** a written agreement between you and The Qt Company. For licensing terms",
                "** and conditions see https://www.qt.io/terms-conditions. For further",
                "** information use the contact form at https://www.qt.io/contact-us.",
                "**",
                "** GNU Lesser General Public License Usage",
                "** Alternatively, this file may be used under the terms of the GNU Lesser",
                "** General Public License version 3 as published by the Free Software",
                "** Foundation and appearing in the file LICENSE.LGPL3 included in the",
                "** packaging of this file. Please review the following information to",
                "** ensure the GNU Lesser General Public License version 3 requirements",
                "** will be met: https://www.gnu.org/licenses/lgpl-3.0.html.",
                "**",
                "** GNU General Public License Usage",
                "** Alternatively, this file may be used under the terms of the GNU",
                "** General Public License version 2.0 or (at your option) the GNU General",
                "** Public license version 3 or any later version approved by the KDE Free",
                "** Qt Foundation. The licenses are as published by the Free Software",
                "** Foundation and appearing in the file LICENSE.GPL2 and LICENSE.GPL3",
                "** included in the packaging of this file. Please review the following",
                "** information to ensure the GNU General Public License requirements will",
                "** be met: https://www.gnu.org/licenses/gpl-2.0.html and",
                "** https://www.gnu.org/licenses/gpl-3.0.html.",
                "**",
                "** $QT_END_LICENSE$",
                "**",
                "****************************************************************************/",
            ],
            "lines": [
                "/*",
                " * DQt - D bindings for the Qt Toolkit",
                " *",
                " * GNU Lesser General Public License Usage",
                " * This file may be used under the terms of the GNU Lesser",
                " * General Public License version 3 as published by the Free Software",
                " * Foundation and appearing in the file LICENSE.LGPL3 included in the",
                " * packaging of this file. Please review the following information to",
                " * ensure the GNU Lesser General Public License version 3 requirements",
                " * will be met: https://www.gnu.org/licenses/lgpl-3.0.html.",
                " */",
            ]
        }
    ]
}
